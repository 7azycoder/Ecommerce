//Functionalities
Adding Products
Search
Cart
Authentication signin/signup and Facebook Login
Payment

//Technologies
nodejs
expressjs
ejs
mongodb
elastic search
jquery
stripe (for payments)

//Tools to download
Nodejs LTS
atom
create account at mongolab.com
git
github

//http methods
get
app.get('/',function(req,res){
  var name = "Lovepreet";
  res.json("My name is " + name);
});
post
app.post()
put
app.put()
delete
app.delete()

//installation
sudo apt-get install nodejs
sudo apt-get install npm
after doing this create a symlink using following command
ln -s /usr/bin/nodejs /usr/bin/node
sudo npm install nodemon -g
npm init  // provide details there


write your server.js connection code like this:
var express = require('express');
var app = express(); // object of express

app.listen(3000,function(err){
  if(err) throw err;
  console.log("Server is Running");
});

install express now through terminal
npm install express --save
on doing this package.json gets modified automatically and node_modules folder appears in site folder automatically
now run server through following command
nodemon server

create homepage using app.get method

add 'morgan' logging request library in server.js
after it install morgan from terminal using command
npm install morgan --save

create a new folder models. It will contain schemas for our databases
create new file in this folder named 'user.js'
in this file create schema named 'UserSchema'
at last of this file write export command
then install mongooose and bcrypt-nodejs from terminal using the following command
npm install mongoose bcrypt-nodejs --save

got to server.js file and import mongoose library there and connect to database by using mongoose.connect function
now go to site mongolab.com and login to your account. Click on 'create new' button ,select amazon web services, select single node , select sandbox, provide name for db, click deploy.
click on newly creatd db and add database user using 'users' tab
copy url of db and paste it in mongoose.connect function and change dbuser and dbpassword fields in url
now start the server again using command : nodemon server

import 'body-parser' to server.js and also install it from terminal using command
npm install body-parser --save

write few body-parser functions
write a post function in server.js to handle post request for user creation
then install postman in chrome and create a request

next we have to install ejs and ejs-mate from terminal and import them in server.js
ejs is a superpower for html. It is a library to render web pages. ejs-mate is an extension of ejs.
next write middleware functions for ejs and then create a new folder 'views' and inside it create a new file 'home.ejs'
write some html content with headings and paragraph tags in 'home.js' and add code to 'server.js' to render it
create new file 'boillerplate.ejs' . This basically is used to include on all pages just like header and footer of website.Declare 'body' command of ejs in this file and later include it in other main files like 'home.ejs' and 'about.ejs' using 'layout' command.
create a new folder 'main' inside 'views' and move home.ejs and about.ejs into it. 'main' folder will contain main pages of our website.
after changing location of home.ejs and about.ejs make changes to their rendering functions in 'server.ejs'

create new folder 'partials' inside 'views' and create two files named 'navbar.ejs' and 'footer.ejs'. Write some content to these files and then go to 'boilerplate.ejs' and include theme using 'include' commannd of ejs
